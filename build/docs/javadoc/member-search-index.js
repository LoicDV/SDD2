memberSearchIndex = [{"p":"src.main.java.GUI","c":"DrawSegment","l":"addContainers(Double, Double, Double, Double)","u":"addContainers(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)"},{"p":"src.main.java.GUI","c":"DrawSegment","l":"addLineDouble(Double, Double, Double, Double)","u":"addLineDouble(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)"},{"p":"src.main.java.logique","c":"Intersections","l":"addLowerAndInside(ArrayList<Segment>, ArrayList<Segment>, Point, T)","u":"addLowerAndInside(java.util.ArrayList,java.util.ArrayList,src.main.java.logique.Point,src.main.java.logique.T)"},{"p":"src.main.java.GUI","c":"AddSegment","l":"AddSegment()","u":"%3Cinit%3E()"},{"p":"src.main.java.logique","c":"AVL","l":"AVL()","u":"%3Cinit%3E()"},{"p":"src.main.java.logique","c":"AVL","l":"AVL(Fg, AVL<Fg>, AVL<Fg>)","u":"%3Cinit%3E(Fg,src.main.java.logique.AVL,src.main.java.logique.AVL)"},{"p":"src.main.java.logique","c":"AVL","l":"balance()"},{"p":"src.main.java.logique","c":"AVL","l":"calculHeight()"},{"p":"src.main.java.GUI","c":"ChangeSegment","l":"changeSegment(Line)","u":"changeSegment(javafx.scene.shape.Line)"},{"p":"src.main.java.GUI","c":"ChangeSegment","l":"ChangeSegment(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"src.main.java.GUI","c":"ClearPane","l":"checkEquals(Line, Line)","u":"checkEquals(javafx.scene.shape.Line,javafx.scene.shape.Line)"},{"p":"src.main.java.GUI","c":"ClearPane","l":"ClearPane()","u":"%3Cinit%3E()"},{"p":"src.main.java.logique","c":"Point","l":"comparePoint(Point)","u":"comparePoint(src.main.java.logique.Point)"},{"p":"src.main.java.GUI","c":"Compilation","l":"Compilation(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"src.main.java.logique","c":"Intersections","l":"compteur"},{"p":"src.main.java.GUI","c":"DrawSegment","l":"convertLineToSegment(Line)","u":"convertLineToSegment(javafx.scene.shape.Line)"},{"p":"src.main.java.GUI","c":"ChangeSegment","l":"coordSegment(Line, Double, Double, Double, Double)","u":"coordSegment(javafx.scene.shape.Line,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)"},{"p":"src.main.java.GUI","c":"DisplayContainers","l":"displayContainers()"},{"p":"src.main.java.GUI","c":"DisplayContainers","l":"DisplayContainers()","u":"%3Cinit%3E()"},{"p":"src.main.java.GUI","c":"DisplayIntersection","l":"displayIntersection()"},{"p":"src.main.java.GUI","c":"DisplayIntersection","l":"DisplayIntersection()","u":"%3Cinit%3E()"},{"p":"src.main.java.GUI","c":"DisplayIntersection","l":"displayIntersectionSweep()"},{"p":"src.main.java.logique","c":"Segment","l":"doesOverlap(Segment)","u":"doesOverlap(src.main.java.logique.Segment)"},{"p":"src.main.java.GUI","c":"Exception","l":"doubleLineException()"},{"p":"src.main.java.GUI","c":"DrawSegment","l":"draw(File)","u":"draw(java.io.File)"},{"p":"src.main.java.GUI","c":"DrawSegment","l":"drawCircle(double, double, Color)","u":"drawCircle(double,double,javafx.scene.paint.Color)"},{"p":"src.main.java.GUI","c":"DrawSegment","l":"DrawSegment()","u":"%3Cinit%3E()"},{"p":"src.main.java.logique","c":"Point","l":"equalPoint(Point)","u":"equalPoint(src.main.java.logique.Point)"},{"p":"src.main.java.logique","c":"Segment","l":"equalSegment(Segment)","u":"equalSegment(src.main.java.logique.Segment)"},{"p":"src.main.java.logique","c":"AVL","l":"equilibrate()"},{"p":"src.main.java.GUI","c":"Exception","l":"Exception()","u":"%3Cinit%3E()"},{"p":"src.main.java.logique","c":"Intersections","l":"FindIntersections()"},{"p":"src.main.java.logique","c":"AVL","l":"findMax()"},{"p":"src.main.java.logique","c":"AVL","l":"findMin()"},{"p":"src.main.java.logique","c":"Q","l":"findMinQ()"},{"p":"src.main.java.logique","c":"Intersections","l":"FindNewEvent(Segment, Segment, Point, double, Q)","u":"FindNewEvent(src.main.java.logique.Segment,src.main.java.logique.Segment,src.main.java.logique.Point,double,src.main.java.logique.Q)"},{"p":"src.main.java.GUI","c":"Main","l":"getBorderPane()"},{"p":"src.main.java.GUI","c":"Main","l":"getContainers()"},{"p":"src.main.java.logique","c":"AVL","l":"getData()"},{"p":"src.main.java.GUI","c":"Main","l":"getDisplayContainers()"},{"p":"src.main.java.GUI","c":"Main","l":"getFile()"},{"p":"src.main.java.logique","c":"AVL","l":"getHeight()"},{"p":"src.main.java.logique","c":"Segment","l":"getIntersectionDroite(Segment)","u":"getIntersectionDroite(src.main.java.logique.Segment)"},{"p":"src.main.java.logique","c":"Segment","l":"getIntersectionPoint(Segment)","u":"getIntersectionPoint(src.main.java.logique.Segment)"},{"p":"src.main.java.logique","c":"Segment","l":"getIntersectionPointVertical(Segment, boolean, Point)","u":"getIntersectionPointVertical(src.main.java.logique.Segment,boolean,src.main.java.logique.Point)"},{"p":"src.main.java.logique","c":"Intersections","l":"getIntersections()"},{"p":"src.main.java.logique","c":"Point","l":"getIsIntersectionOf()"},{"p":"src.main.java.logique","c":"Point","l":"getIsUpperOf()"},{"p":"src.main.java.logique","c":"AVL","l":"getLeftAVL()"},{"p":"src.main.java.logique","c":"Intersections","l":"getLeftMost(T, Point, Segment)","u":"getLeftMost(src.main.java.logique.T,src.main.java.logique.Point,src.main.java.logique.Segment)"},{"p":"src.main.java.logique","c":"Intersections","l":"getLeftNeighborPoint(T, Point)","u":"getLeftNeighborPoint(src.main.java.logique.T,src.main.java.logique.Point)"},{"p":"src.main.java.logique","c":"Intersections","l":"getLeftNeighborSegment(T, Segment, Segment, double, double, double, boolean, boolean)","u":"getLeftNeighborSegment(src.main.java.logique.T,src.main.java.logique.Segment,src.main.java.logique.Segment,double,double,double,boolean,boolean)"},{"p":"src.main.java.logique","c":"Segment","l":"getLower()"},{"p":"src.main.java.GUI","c":"Main","l":"getPane()"},{"p":"src.main.java.logique","c":"Segment","l":"getParam_P()"},{"p":"src.main.java.logique","c":"Segment","l":"getPente()"},{"p":"src.main.java.logique","c":"AVL","l":"getRightAVL()"},{"p":"src.main.java.logique","c":"Intersections","l":"getRightMost(T, Point, Segment)","u":"getRightMost(src.main.java.logique.T,src.main.java.logique.Point,src.main.java.logique.Segment)"},{"p":"src.main.java.logique","c":"Intersections","l":"getRightNeighborPoint(T, Point)","u":"getRightNeighborPoint(src.main.java.logique.T,src.main.java.logique.Point)"},{"p":"src.main.java.logique","c":"Intersections","l":"getRightNeighborSegment(T, Segment, Segment, double, double, double, boolean, boolean)","u":"getRightNeighborSegment(src.main.java.logique.T,src.main.java.logique.Segment,src.main.java.logique.Segment,double,double,double,boolean,boolean)"},{"p":"src.main.java.GUI","c":"Main","l":"getScrollPane()"},{"p":"src.main.java.GUI","c":"Main","l":"getSet()"},{"p":"src.main.java.GUI","c":"Main","l":"getSetCircle()"},{"p":"src.main.java.GUI","c":"Main","l":"getStage()"},{"p":"src.main.java.logique","c":"Segment","l":"getUpper()"},{"p":"src.main.java.logique","c":"Point","l":"getX()"},{"p":"src.main.java.logique","c":"Point","l":"getY()"},{"p":"src.main.java.logique","c":"Intersections","l":"HandleEventPoint(Point, Q, T, ArrayList<Point>)","u":"HandleEventPoint(src.main.java.logique.Point,src.main.java.logique.Q,src.main.java.logique.T,java.util.ArrayList)"},{"p":"src.main.java.GUI","c":"Helper","l":"Helper(int)","u":"%3Cinit%3E(int)"},{"p":"src.main.java.logique","c":"AVL","l":"inordre()"},{"p":"src.main.java.logique","c":"Q","l":"inordreQ()"},{"p":"src.main.java.logique","c":"Q","l":"insertQ(Point, boolean, Segment)","u":"insertQ(src.main.java.logique.Point,boolean,src.main.java.logique.Segment)"},{"p":"src.main.java.logique","c":"Q","l":"insertQEmpty(Point)","u":"insertQEmpty(src.main.java.logique.Point)"},{"p":"src.main.java.logique","c":"T","l":"insertT(Segment, double, double, double)","u":"insertT(src.main.java.logique.Segment,double,double,double)"},{"p":"src.main.java.logique","c":"T","l":"insertTEmpty(Segment)","u":"insertTEmpty(src.main.java.logique.Segment)"},{"p":"src.main.java.logique","c":"Segment","l":"intersectionExtremite(Segment)","u":"intersectionExtremite(src.main.java.logique.Segment)"},{"p":"src.main.java.logique","c":"Intersections","l":"Intersections()","u":"%3Cinit%3E()"},{"p":"src.main.java.logique","c":"Intersections","l":"Intersections(ArrayList<Segment>)","u":"%3Cinit%3E(java.util.ArrayList)"},{"p":"src.main.java.logique","c":"AVL","l":"isEmpty()"},{"p":"src.main.java.logique","c":"Segment","l":"isHorizontal()"},{"p":"src.main.java.logique","c":"Segment","l":"isIn(Point)","u":"isIn(src.main.java.logique.Point)"},{"p":"src.main.java.logique","c":"Segment","l":"isInHorizontale(Point)","u":"isInHorizontale(src.main.java.logique.Point)"},{"p":"src.main.java.logique","c":"Segment","l":"isIntersection(Segment)","u":"isIntersection(src.main.java.logique.Segment)"},{"p":"src.main.java.logique","c":"Segment","l":"isIntersectionExtremite(Segment)","u":"isIntersectionExtremite(src.main.java.logique.Segment)"},{"p":"src.main.java.logique","c":"Segment","l":"isInVertical(Point)","u":"isInVertical(src.main.java.logique.Point)"},{"p":"src.main.java.logique","c":"AVL","l":"isLeaf()"},{"p":"src.main.java.logique","c":"Segment","l":"isLeftOrRight(Segment, double, boolean)","u":"isLeftOrRight(src.main.java.logique.Segment,double,boolean)"},{"p":"src.main.java.logique","c":"T","l":"isLeftOrRight(Segment, double, double, double, boolean)","u":"isLeftOrRight(src.main.java.logique.Segment,double,double,double,boolean)"},{"p":"src.main.java.logique","c":"Point","l":"isUpper(Point)","u":"isUpper(src.main.java.logique.Point)"},{"p":"src.main.java.logique","c":"Segment","l":"isVertical()"},{"p":"src.main.java.logique","c":"AVL","l":"leftIsEmpty()"},{"p":"src.main.java.logique","c":"AVL","l":"leftRotation()"},{"p":"src.main.java.GUI","c":"Main","l":"Main()","u":"%3Cinit%3E()"},{"p":"src.main.java","c":"Test","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"src.main.java.GUI","c":"MyMenuBar","l":"MyMenuBar()","u":"%3Cinit%3E()"},{"p":"src.main.java.GUI","c":"Exception","l":"noAddSegment()"},{"p":"src.main.java.GUI","c":"Compilation","l":"noCircle()"},{"p":"src.main.java.GUI","c":"DrawSegment","l":"noDoubleLine(Line, Double, Double, Double, Double, boolean)","u":"noDoubleLine(javafx.scene.shape.Line,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,boolean)"},{"p":"src.main.java.GUI","c":"Exception","l":"noFileOpen()"},{"p":"src.main.java.GUI","c":"Exception","l":"noFileTake()"},{"p":"src.main.java.GUI","c":"Exception","l":"noFormatEditor()"},{"p":"src.main.java.GUI","c":"Exception","l":"noGoodFile()"},{"p":"src.main.java.GUI","c":"Exception","l":"noSaveDone()"},{"p":"src.main.java.GUI","c":"OpenScript","l":"openFile()"},{"p":"src.main.java.GUI","c":"OpenScript","l":"OpenScript()","u":"%3Cinit%3E()"},{"p":"src.main.java.logique","c":"Point","l":"Point(double, double)","u":"%3Cinit%3E(double,double)"},{"p":"src.main.java.logique","c":"Point","l":"Point(double, double, ArrayList<Segment>, ArrayList<Segment>)","u":"%3Cinit%3E(double,double,java.util.ArrayList,java.util.ArrayList)"},{"p":"src.main.java.logique","c":"Point","l":"print()"},{"p":"src.main.java.logique","c":"Segment","l":"print()"},{"p":"src.main.java.logique","c":"Q","l":"Q()","u":"%3Cinit%3E()"},{"p":"src.main.java.logique","c":"Q","l":"Q(Point, AVL<Point>, AVL<Point>)","u":"%3Cinit%3E(src.main.java.logique.Point,src.main.java.logique.AVL,src.main.java.logique.AVL)"},{"p":"src.main.java.GUI","c":"ReadFile","l":"read(File)","u":"read(java.io.File)"},{"p":"src.main.java.GUI","c":"ReadFile","l":"ReadFile()","u":"%3Cinit%3E()"},{"p":"src.main.java.GUI","c":"ClearPane","l":"removeSegment(Line)","u":"removeSegment(javafx.scene.shape.Line)"},{"p":"src.main.java.logique","c":"AVL","l":"rightIsEmpty()"},{"p":"src.main.java.logique","c":"AVL","l":"rightRotation()"},{"p":"src.main.java.GUI","c":"Main","l":"runApp(String[])","u":"runApp(java.lang.String[])"},{"p":"src.main.java.GUI","c":"SaveFile","l":"save(File)","u":"save(java.io.File)"},{"p":"src.main.java.GUI","c":"SaveFile","l":"SaveFile(File, boolean)","u":"%3Cinit%3E(java.io.File,boolean)"},{"p":"src.main.java.logique","c":"Segment","l":"Segment(Point, Point)","u":"%3Cinit%3E(src.main.java.logique.Point,src.main.java.logique.Point)"},{"p":"src.main.java.logique","c":"AVL","l":"setData(Fg)"},{"p":"src.main.java.GUI","c":"Main","l":"setFile(File)","u":"setFile(java.io.File)"},{"p":"src.main.java.logique","c":"AVL","l":"setHeight(int)"},{"p":"src.main.java.logique","c":"Intersections","l":"setIntersections(ArrayList<Segment>)","u":"setIntersections(java.util.ArrayList)"},{"p":"src.main.java.logique","c":"Point","l":"setIsIntersectionOf(ArrayList<Segment>)","u":"setIsIntersectionOf(java.util.ArrayList)"},{"p":"src.main.java.logique","c":"Point","l":"setIsUpperOf(ArrayList<Segment>)","u":"setIsUpperOf(java.util.ArrayList)"},{"p":"src.main.java.logique","c":"AVL","l":"setLeftAVL(AVL<Fg>)","u":"setLeftAVL(src.main.java.logique.AVL)"},{"p":"src.main.java.logique","c":"Segment","l":"setLower(Point)","u":"setLower(src.main.java.logique.Point)"},{"p":"src.main.java.GUI","c":"Main","l":"setPane(Pane)","u":"setPane(javafx.scene.layout.Pane)"},{"p":"src.main.java.logique","c":"Point","l":"setPoint(Point)","u":"setPoint(src.main.java.logique.Point)"},{"p":"src.main.java.logique","c":"AVL","l":"setRightAVL(AVL<Fg>)","u":"setRightAVL(src.main.java.logique.AVL)"},{"p":"src.main.java.GUI","c":"Main","l":"setSetCircle()"},{"p":"src.main.java.logique","c":"Segment","l":"setUpper(Point)","u":"setUpper(src.main.java.logique.Point)"},{"p":"src.main.java.logique","c":"Point","l":"setX(double)"},{"p":"src.main.java.logique","c":"Point","l":"setXY(double, double)","u":"setXY(double,double)"},{"p":"src.main.java.logique","c":"Point","l":"setY(double)"},{"p":"src.main.java.GUI","c":"AddSegment","l":"start()"},{"p":"src.main.java.GUI","c":"Main","l":"start(Stage)","u":"start(javafx.stage.Stage)"},{"p":"src.main.java.GUI","c":"ChangeSegment","l":"start(String)","u":"start(java.lang.String)"},{"p":"src.main.java.logique","c":"Q","l":"suppressQ(Point)","u":"suppressQ(src.main.java.logique.Point)"},{"p":"src.main.java.logique","c":"Q","l":"suppressQMin()"},{"p":"src.main.java.logique","c":"Q","l":"suppressQRoot()"},{"p":"src.main.java.logique","c":"T","l":"suppressT(Segment, double, double, double)","u":"suppressT(src.main.java.logique.Segment,double,double,double)"},{"p":"src.main.java.logique","c":"T","l":"suppressTMax(double, double, double)","u":"suppressTMax(double,double,double)"},{"p":"src.main.java.logique","c":"T","l":"suppressTMin(double, double, double)","u":"suppressTMin(double,double,double)"},{"p":"src.main.java.logique","c":"T","l":"suppressTRoot(double, double, double)","u":"suppressTRoot(double,double,double)"},{"p":"src.main.java.logique","c":"T","l":"T()","u":"%3Cinit%3E()"},{"p":"src.main.java.logique","c":"T","l":"T(Segment, T, T)","u":"%3Cinit%3E(src.main.java.logique.Segment,src.main.java.logique.T,src.main.java.logique.T)"},{"p":"src.main.java","c":"Test","l":"Test()","u":"%3Cinit%3E()"},{"p":"src.main.java.logique","c":"Point","l":"toString()"},{"p":"src.main.java.logique","c":"Segment","l":"toString()"}];updateSearchResults();